                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.4.0 #8981 (May 19 2014) (Linux)
                              4 ; This file was generated Fri Sep 19 11:39:46 2014
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _rand
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;main.c:5: void main() {
                             46 ;	---------------------------------
                             47 ; Function main
                             48 ; ---------------------------------
   0000                      49 _main_start::
   0000                      50 _main:
   0000 DD E5         [15]   51 	push	ix
   0002 DD 21 00 00   [14]   52 	ld	ix,#0
   0006 DD 39         [15]   53 	add	ix,sp
   0008 F5            [11]   54 	push	af
                             55 ;main.c:13: __endasm;
   0009 3E 00         [ 7]   56 	ld a, #0
   000B CD 0E BC      [17]   57 	call #0xBC0E
                             58 ;main.c:15: for(nByte=0; nByte < 0x3FFF; nByte++) {
   000E 11 00 00      [10]   59 	ld	de,#0x0000
   0011                      60 00102$:
                             61 ;main.c:16: pScreen[nByte] = (unsigned char) (rand() % 256);
   0011 21 00 C0      [10]   62 	ld	hl,#0xC000
   0014 19            [11]   63 	add	hl,de
   0015 E3            [19]   64 	ex	(sp), hl
   0016 D5            [11]   65 	push	de
   0017 CDr00r00      [17]   66 	call	_rand
   001A 01 00 01      [10]   67 	ld	bc,#0x0100
   001D C5            [11]   68 	push	bc
   001E E5            [11]   69 	push	hl
   001F CDr00r00      [17]   70 	call	__modsint_rrx_s
   0022 F1            [10]   71 	pop	af
   0023 F1            [10]   72 	pop	af
   0024 D1            [10]   73 	pop	de
   0025 7D            [ 4]   74 	ld	a,l
   0026 E1            [10]   75 	pop	hl
   0027 E5            [11]   76 	push	hl
   0028 77            [ 7]   77 	ld	(hl),a
                             78 ;main.c:21: __endasm;
   0029 CD 06 BB      [17]   79 	call #0xBB06
                             80 ;main.c:15: for(nByte=0; nByte < 0x3FFF; nByte++) {
   002C 13            [ 6]   81 	inc	de
   002D 7B            [ 4]   82 	ld	a,e
   002E D6 FF         [ 7]   83 	sub	a, #0xFF
   0030 7A            [ 4]   84 	ld	a,d
   0031 DE 3F         [ 7]   85 	sbc	a, #0x3F
   0033 38 DC         [12]   86 	jr	C,00102$
   0035 DD F9         [10]   87 	ld	sp, ix
   0037 DD E1         [14]   88 	pop	ix
   0039 C9            [10]   89 	ret
   003A                      90 _main_end::
                             91 	.area _CODE
                             92 	.area _INITIALIZER
                             93 	.area _CABS (ABS)
